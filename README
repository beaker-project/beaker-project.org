
This is the beaker-project.org web site.

Note that many parts of this web site are generated from elsewhere:

    * Some .html pages are generated from the corresponding .txt file in
      Markdown using Pandoc.
    * Some documentation is built using Sphinx from docstrings extracted
      from Beaker code.
    * Some shell scripts have a pretty documented version which is
      generated by shocco.

This repository uses git submodules to include all (recent) branches of 
Beaker's source tree under the beaker-branches/ subdirectory. On first checkout 
you should initialise the submodules by running:

    git submodule init

and subsequently update them by running:

    git submodule update


Dependencies
------------

* python-sphinx
* pandoc
* python-dulwich (to generate release changelogs)

Building docs from a local checkout
-----------------------------------

The web site builds the Sphinx documentation from each submodule in 
beaker-branches/ as docs-$BRANCHNAME/ (master is just docs/).

If you want to also build the docs from your own Beaker checkout with random 
modifications, you can trick the scripts into thinking it is a separate branch 
named "mine":

    ln -s ../../path/to/your/beaker beaker-branches/mine

Then you can build it as docs-mine:

    make docs-mine


Publishing the web site
-----------------------

These instructions are only relevant to Beaker developers who have
access to publish to beaker-project.org.

If any branches of Beaker have moved on (because a new version of Beaker has 
been released), update their submodule reference. XXX pester Dan to automate 
this. For example, to update master:

    cd beaker-branches/master
    git pull origin master
    cd ../..
    git add -u beaker-branches/master
    git commit -m 'update beaker master submodule'

Build your changes:

    ./publish.sh

Now the 'published' branch has been updated. First, check that the 
changes you've introduced look sane:

    git diff published~..published

If the diff looks incorrect (for example, you accidentally ran `./publish.sh`
before running `git pull` or commiting a change), discard the unwanted 
publication attempt:

    git fetch beaker-project.org:/srv/www/beaker-project.org/git/ +master:published

Once you're happy with it, push it live:

    git push beaker-project.org:/srv/www/beaker-project.org/git/ published:master
