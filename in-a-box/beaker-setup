#!/bin/sh
# This script will get a basic Beaker installation up and running.

# These are the tasks which we will fetch and upload to Beaker below.
rpms="
    https://beaker-project.org/tasks/beaker-distribution-install-1.12-1.noarch.rpm
    https://beaker-project.org/tasks/beaker-distribution-inventory-1.2-4.noarch.rpm
    https://beaker-project.org/tasks/beaker-distribution-reservesys-3.4-5.noarch.rpm
    https://beaker-project.org/tasks/beaker-distribution-updateDistro-1.2-1.noarch.rpm
    https://beaker-project.org/tasks/distribution-distribution-command-1.1-4.noarch.rpm
    https://beaker-project.org/tasks/distribution-distribution-utils-dummy-1.0-3.noarch.rpm
    https://beaker-project.org/tasks/distribution-distribution-virt-install-4.0-86.noarch.rpm
    https://beaker-project.org/tasks/distribution-distribution-virt-start-2.0-1.noarch.rpm
    https://beaker-project.org/tasks/rh-tests-kernel-distribution-ltp-nfs-1.0-0.noarch.rpm
"

# We need to collect a few details from the user.
echo "This script will do the following"
echo " - backup /etc/my.cnf and replace it with new defaults."
echo " - create the beaker DB, DB user and initialize the DB."
echo " - Add lab controller account for this machine."
echo " - Add some standard tasks to the scheduler"
echo "   (see https://beaker-project.org/docs/user-guide/beaker-provided-tasks.html)"
echo -n "Do you want to proceed? (y/n) "
read answer
if [ "$answer" != "y" -a $answer != "Y" ]; then
    exit 1
fi

echo -n "Please enter a login name for the Beaker admin account: "
read admin
echo -n "Please enter an email address for $admin: "
read email
password="dummy"
stty -echo
trap "stty echo; exit" INT TERM EXIT
while [ "$password" != "$password_again" ]; do
    echo -n "Please enter a passowrd for $admin: "
    read password
    echo
    echo -n "Please enter the password again: "
    read password_again
    echo
    if [ "$password" != "$password_again" ]; then
        echo "Passwords don't match, try again"
        echo
    fi
done
stty echo
trap - INT TERM EXIT

# Let's apply some useful settings to the MySQL server.
cp /etc/my.cnf /etc/my.cnf-orig
cat /etc/my.cnf-orig | awk '
        {print $1};
        /\[mysqld\]/ {
            print "default-storage-engine=INNODB";
            print "max_allowed_packet=50M";
            print "character-set-server=utf8";
        }' > /etc/my.cnf
service mysqld restart

# By default, Beaker connects to the local MySQL server using database `beaker`
# with username `beaker` and password `beaker`. If you'd like to change these,
# be sure to update the `sqlalchemy.dburi` setting in `/etc/beaker/server.cfg`
# accordingly.
echo "CREATE DATABASE beaker;" | mysql
echo "GRANT ALL ON beaker.* TO 'beaker'@'localhost' IDENTIFIED BY 'beaker';" | mysql

# The `beaker-init` program will populate a fresh database. Here we pass in the
# admin user's details which we collected above.
su -s /bin/sh apache -c "beaker-init -u \"$admin\" -p \"$password\" -e \"$email\""

# Now we can log in to Beaker using our admin credentials and do a few things.
# Normally these steps would be done using a web browser.
tmpdir=$(mktemp -d)
trap "popd; rm -rf $tmpdir; exit" INT TERM EXIT
pushd $tmpdir
curl -c tmpcookie -d user_name=$admin -d password=$password -d login=1 http://localhost/bkr/login || exit 1
# Add ourselves as a lab controller.
curl -b tmpcookie -d fqdn=$(hostname -f) -d lusername=host/localhost.localdomain -d lpassword=password -d email=root@localhost.localdomain -d Save=1 http://localhost/bkr/labcontrollers/save || exit 1
# Fetch and upload some useful task RPMs.
wget $rpms
for task in *.rpm; do
    curl -b tmpcookie --form task_rpm=@$task http://localhost/bkr/tasks/save || exit 1
done
popd
rm -rf $tmpdir
trap - INT TERM EXIT

# The beaker-proxy, beaker-watchdog, and beaker-provision daemons run on the lab controller.
chkconfig beaker-proxy on
service beaker-proxy start
chkconfig beaker-watchdog on
service beaker-watchdog start
chkconfig beaker-provision on
service beaker-provision start
# The beaker-transfer daemon is not needed when the lab controller and the
# scheduler are the same machine.
#chkconfig beaker-transfer on
#service beaker-transfer start

# Finally, we can start up the beakerd scheduler daemon.
chkconfig beakerd on
service beakerd start

# And we're done!
echo "All Done!"
